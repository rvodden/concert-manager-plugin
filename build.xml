<?xml version="1.0" encoding="UTF-8"?>
<?xml-model xlink:href="/usr/share/php5/PEAR/data/phing/etc/phing-grammar.rng"
            type="application/xml"
            schematypens="http://relaxng.org/ns/structure/1.0" ?>
<project name="concert-management" default="test">

	<property name="vendordir" value="${project.basedir}/vendor" />
	<property name="vendorbindir" value="${vendordir}/bin" />
	<property name="reportsdir" value="${project.basedir}/reports" />
	<property name="phpreportsdir" value="${reportsdir}/php" />
	<property name="autoloaderpath" value="${vendordir}/autoload.php" />
	<property name="phpunitbootstrappath" value="${project.basedir}/tests/bootstrap.php" />

	<target name="test" depends="autoloader" description="Runs all tests">
		<phingcall target="unittest" />
		<phingcall target="codesniffer" />
		<phingcall target="featuretest" />
	</target>

	<target name="autoloader" description="Loads composer autoloader">
		<autoloader autoloaderpath="${autoloaderpath}" />
	</target>

	<target name="unittest" depends="createreportsdirectory"
		description="Run tests with PHPUnit">
		<exec executable="${vendorbindir}/phpunit" passthru="true" checkreturn="true">
			<arg value="--colors" />
		</exec>
	</target>
	
	<target name="featuretest" depends="createreportsdirectory"
		description="Run tests with Behat">
		<exec executable="${vendorbindir}/behat" passthru="true" checkreturn="true">
		</exec>
	</target>

	<target name="codesniffer" description="Sniff php code format of single file">
		<foreach param="codesnifferfilename" target="codesniffer-onefile">
			<fileset dir=".">
				<include name="**/*.php" />
				<exclude name="vendor/**" />
				<exclude name="*.js" />
				<exclude name="*.css" />
				<exclude name="*-display.php" />
			</fileset>
		</foreach>
	</target>

	<target name="codesniffer-onefile" description="Sniff php code format of single file">
		<echo message="${codesnifferfilename}" />
		<exec executable="vendor/bin/phpcs" passthru="true" checkreturn="true">
			<arg value="--standard=phpcs.ruleset.xml" />
			<arg file="${codesnifferfilename}" />
		</exec>
	</target>

	<target name="createreportsdirectory" description="Creates the reports directory">
		<mkdir dir="${phpreportsdir}" />
	</target>

	<target name="clean" description="Cleanup build artifacts">
		<delete dir="${vendordir}" />
		<delete dir="${reportsdir}" />
		<delete file="${composerlockpath}" />
	</target>

</project>